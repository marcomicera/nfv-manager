<?xml version="1.0" encoding="UTF-8"?>

<project basedir="." default="build-service" name="NFV-SOL3">
	<description>
			Script for NFV Assignment 3 solution
	</description>

	<!-- Service to which this Ant file refers to -->
	<property name="serviceName" value="NfvDeployer" />

	<!-- Directories -->
	<property name="src.dir" location="${basedir}/src" />
	<property name="xsd.dir" location="${basedir}/xsd" />
	<property name="nfv.dir" location="${src.dir}/it/polito/dp2/NFV" />
	<property name="lab1.dir" location="${nfv.dir}/lab1" />
	<property name="lab3.dir" location="${nfv.dir}/lab3" />
	<property name="sol3.dir" location="${nfv.dir}/sol3" />
	<property name="service.dir" location="${sol3.dir}/service" />
	<property name="client1.dir" location="${sol3.dir}/client1" />
	<property name="client2.dir" location="${sol3.dir}/client2" />
	<!-- TODO set it to /opt/dp2/shared -->
	<property name="dp2.dir" location="${basedir}/../../../lib-dp2" />

	<!-- The classpath to be used for running the tests -->
	<path id="test.classpath">
		<pathelement location="${build.dir}" />
		<fileset dir="${lib.dir}">
			<include name="*.jar" />
		</fileset>
		<fileset dir="${ext.lib.dir}">
			<include name="*.jar" />
			<exclude name="ant-*.jar" />
		</fileset>
	</path>

	<!-- define wjc task (WADL to JAVA) -->
	<taskdef name="wjc" classname="org.jvnet.ws.wadl2java.WJCTask">
		<classpath>
			<fileset dir="${dp2.dir}" includes="*.jar" />
		</classpath>
	</taskdef>

	<target name="generate-artifacts" description="generate Java classes from schema">
		<exec executable="xjc" failonerror="true">
			<arg value="-d" />
			<arg value="${src.dir}" />
			<arg value="-p" />
			<arg value="it.polito.dp2.NFV.sol3.service.gen.model" />
			<arg value="${xsd.dir}/${serviceName}.xsd" />
		</exec>
	</target>

	<target name="generate-artifacts-client1" description="generate Java classes from schema">
		<exec executable="xjc" failonerror="true">
			<arg value="-d" />
			<arg value="${src.dir}" />
			<arg value="-p" />
			<arg value="it.polito.dp2.NFV.sol3.client1.nfvdeployer" />
			<arg value="${xsd.dir}/${serviceName}.xsd" />
		</exec>
	</target>

	<!-- Generating the Java class from the Neo4JSimpleXML WADL -->
	<target name="generate-neo4jsimplexml-wadl">
		<mkdir dir="${src.dir}" />
		<wjc target="${src.dir}" autoSchemaPackage="false" package="it.polito.dp2.NFV.sol3.service.neo4j" description="${Neo4JSimpleXMLWADL}" />
	</target>
	
	<!-- Generating the Java class from the NfvDeployer WADL -->
		<target name="generate-nfvdeployer-wadl">
			<mkdir dir="${src.dir}" />
			<wjc target="${src.dir}" autoSchemaPackage="false" package="it.polito.dp2.NFV.sol3.client1.nfvdeployer" description="${URL}/application.wadl" />
		</target>

	<!-- Service builder target -->
	<target name="build-service" depends="generate-artifacts, generate-neo4jsimplexml-wadl">
		<echo message="Building ${serviceName}..." />
		<javac destdir="${build.dir}" debug="${debug}" debuglevel="${debuglevel}" source="${source}" target="${target}" includeantruntime="false">
			<src path="${lab1.dir}" />
			<src path="${lab3.dir}" />
			<src path="${service.dir}" />
			<classpath>
				<path refid="test.classpath" />
			</classpath>
		</javac>
		<echo message="${serviceName} built." />
	</target>

	<target name="build-client">
		<antcall target="build-client1" />
		<antcall target="build-client2" />
	</target>

	<target name="build-client1" depends="generate-artifacts-client1, generate-nfvdeployer-wadl">
		<echo>Building client 1...</echo>
		<javac destdir="${build.dir}" debug="${debug}" debuglevel="${debuglevel}" source="${source}" target="${target}" includeantruntime="false">
			<src path="${client1.dir}" />
			<classpath>
				<path refid="test.classpath" />
			</classpath>
		</javac>
		<echo>Done.</echo>
	</target>

	<target name="build-client2">
		<echo>Building client 2...</echo>
		<javac destdir="${build.dir}" debug="${debug}" debuglevel="${debuglevel}" source="${source}" target="${target}" includeantruntime="false">
			<src path="${client2.dir}" />
			<classpath>
				<path refid="test.classpath" />
			</classpath>
		</javac>
		<echo>Done.</echo>
	</target>
</project>