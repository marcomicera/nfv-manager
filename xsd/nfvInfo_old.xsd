<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema">

	<!-- Global element declaration -->
	<xsd:element name="nfvInfo" type="NFVType">
		<!-- Node's functionalType reference -->
		<xsd:keyref name="nodeFunctionalTypeRef" refer="functionalTypeKey">
			<xsd:selector xpath="nffgs/nffg/nodes/node"/>
			<xsd:field xpath="@functionalType"/>
		</xsd:keyref>
		
		<!-- Node's host reference -->
		<xsd:keyref name="nodeHostRef" refer="hostKey">
			<xsd:selector xpath="nffgs/nffg/nodes/node"/>
			<xsd:field xpath="@host"/>
		</xsd:keyref>
		
		<!-- Channel's host references -->
		<xsd:keyref name="channelHost1Ref" refer="hostKey">
			<xsd:selector xpath="network/channels/channel"/>
			<xsd:field xpath="@host1"/>
		</xsd:keyref>
		<xsd:keyref name="channelHost2Ref" refer="hostKey">
			<xsd:selector xpath="network/channels/channel"/>
			<xsd:field xpath="@host2"/>
		</xsd:keyref>
		
		<!-- Node's id key -->
		<xsd:key name="nodeKey">
			<xsd:selector xpath="nffgs/nffg/nodes/node"/>
			<xsd:field xpath="@id"/>
		</xsd:key>
		
		<!-- Link's node references -->
		<xsd:keyref name="linkSourceNodeRef" refer="nodeKey">
			<xsd:selector xpath="nffgs/nffg/links/link"/>
			<xsd:field xpath="@sourceNode"/>
		</xsd:keyref>
		<xsd:keyref name="linkDestinationNodeRef" refer="nodeKey">
			<xsd:selector xpath="nffgs/nffg/links/link"/>
			<xsd:field xpath="@destinationNode"/>
		</xsd:keyref>
		
		<!-- Host's nodes references -->
		<xsd:keyref name="hostNodeRef" refer="nodeKey">
			<xsd:selector xpath="network/hosts/host/node"/>
			<xsd:field xpath="@id"/>
		</xsd:keyref>
		
		<!-- Node's links references -->
		<xsd:keyref name="nodeLinkRef" refer="linkKey">
			<xsd:selector xpath="nffgs/nffg/nodes/node/link"/>
			<xsd:field xpath="@id"/>
		</xsd:keyref>
	</xsd:element>

	<!-- Type definitions -->
	<xsd:complexType name="NFVType">
		<xsd:all>
			<xsd:element name="catalog" type="CatalogType">
				<!-- VNF's functionalType key -->
				<xsd:key name="functionalTypeKey">
					<xsd:selector xpath="VNF"/>
					<xsd:field xpath="@functionalType"/>
				</xsd:key>
			</xsd:element>
			<xsd:element name="network" type="NetworkType"/>
			<xsd:element name="nffgs" minOccurs="0" maxOccurs="1" type="NffgsType">
				<!-- Nffg's id uniqueness -->
				<xsd:unique name="uniqueNffgId">
					<xsd:selector xpath="nffg"/>
					<xsd:field xpath="@id"/>
				</xsd:unique>
			</xsd:element>
		</xsd:all>
	</xsd:complexType>

	<xsd:complexType name="CatalogType">
		<xsd:sequence>
			<xsd:element name="VNF" maxOccurs="unbounded" type="VNFType"/>
		</xsd:sequence>
	</xsd:complexType>
	
	<xsd:complexType name="VNFType">
		<xsd:attribute name="functionalType" type="xsd:token" use="required"/>
		<xsd:attribute name="requiredMemory" type="xsd:int" use="required"/>
		<xsd:attribute name="requiredStorage" type="xsd:int" use="required"/>
	</xsd:complexType>

	<xsd:complexType name="NetworkType">
		<xsd:all>
			<xsd:element name="hosts" type="HostsType">
				<!-- Host's id key -->
				<xsd:key name="hostKey">
					<xsd:selector xpath="host"/>
					<xsd:field xpath="@id"/>
				</xsd:key>
			</xsd:element>
			<xsd:element name="channels" minOccurs="0" maxOccurs="1" type="ChannelsType"/>
		</xsd:all>
	</xsd:complexType>
	
	<xsd:complexType name="HostsType">
		<xsd:sequence>
			<xsd:element name="host" maxOccurs="unbounded" type="HostType"/>
		</xsd:sequence>
	</xsd:complexType>
	
	<xsd:complexType name="HostType">
		<xsd:sequence>
			<xsd:element name="node" minOccurs="0" maxOccurs="unbounded" type="NodeRefType"/>
		</xsd:sequence>
				
		<xsd:attribute name="id" type="xsd:token" use="required"/>
		<xsd:attribute name="availableMemory" type="xsd:int" default="0"/>
		<xsd:attribute name="availableStorage" type="xsd:int" default="0"/>
		<xsd:attribute name="maxVNFs" type="xsd:int" use="required"/>
	</xsd:complexType>
	
	<xsd:complexType name="NodeRefType">
		<xsd:attribute name="id" type="xsd:token" use="required"/>
	</xsd:complexType>
	
	<xsd:complexType name="ChannelsType">
		<xsd:sequence>
			<xsd:element name="channel" minOccurs="1" maxOccurs="unbounded"	type="ChannelType"/>
		</xsd:sequence>
	</xsd:complexType>
	
	<xsd:complexType name="ChannelType">
		<xsd:attribute name="host1" type="xsd:token" use="required"/>
		<xsd:attribute name="host2" type="xsd:token" use="required"/>
		<xsd:attribute name="averageThroughput" type="xsd:float" use="optional"/>
		<xsd:attribute name="averageLatency" type="xsd:int" use="optional"/>
	</xsd:complexType>
	
	<xsd:complexType name="NffgsType">
		<xsd:sequence>
			<xsd:element name="nffg" minOccurs="0" maxOccurs="unbounded" type="NffgType">
				<!-- Link's id key -->
				<xsd:key name="linkKey">
					<xsd:selector xpath="links/link"/>
					<xsd:field xpath="@id"/>
				</xsd:key>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	
	<xsd:complexType name="NffgType">
		<xsd:all>
			<xsd:element name="deployTime" type="xsd:dateTime"/>
			<xsd:element name="nodes" type="NodesType"/>
			<xsd:element name="links" minOccurs="0" maxOccurs="1" type="LinksType"/>
		</xsd:all>
		<xsd:attribute type="xsd:token" name="id" use="required"/>
	</xsd:complexType>
	
	<xsd:complexType name="NodesType">
		<xsd:sequence>
			<xsd:element name="node" minOccurs="1" maxOccurs="unbounded" type="NodeType"/>
		</xsd:sequence>
	</xsd:complexType>
	
	<xsd:complexType name="NodeType">
		<xsd:sequence>
			<xsd:element name="link" minOccurs="0" maxOccurs="unbounded" type="LinkRefType"/>
		</xsd:sequence>
	
		<xsd:attribute name="id" type="xsd:token" use="required"/>
		<xsd:attribute name="functionalType" type="xsd:token" use="required"/>
		<xsd:attribute name="host" type="xsd:token" use="optional"/>
	</xsd:complexType>
	
	<xsd:complexType name="LinkRefType">
		<xsd:attribute name="id" type="xsd:token" use="required"/>
	</xsd:complexType>
	
	<xsd:complexType name="LinksType">
		<xsd:sequence>
			<xsd:element name="link" minOccurs="1" maxOccurs="unbounded" type="LinkType"/>
		</xsd:sequence>
	</xsd:complexType>
	
	<xsd:complexType name="LinkType">
		<xsd:attribute name="id" type="xsd:token" use="required"/>
		<xsd:attribute name="sourceNode" type="xsd:token" use="required"/>
		<xsd:attribute name="destinationNode" type="xsd:token" use="required"/>
		<xsd:attribute name="minimumThroughput" type="xsd:float" use="optional"/>
		<xsd:attribute name="maximumLatency" type="xsd:int" use="optional"/>
	</xsd:complexType>
</xsd:schema>